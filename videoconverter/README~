## videoconverter
videoconverter gem is used for video processing .It make use of the ffmpeg command and streamio-ffmpeg wrapper for reading metadata and transcoding videos.It is used for providing basic functionalities related to video such as bitrate,resolution,thumbnail,split,cut,format conversion etc. 

##Installation
gem install videoconverter

## Ruby:
Tested with ruby 2.0

##Dependencies required in order to use Gem
FFmpeg library:
FFmpeg is a command-line tool that converts audio or video formats.  It includes libavcodec, the open source codec library.
e.g. If you want to convert an avi file into mpg format:
ffmpeg -i input.avi output.mpg 

streamio-ffmpeg Gem:
streamio-ffmpeg is a wrapper that make use of ffmpeg commands. The functionalities provided through streamio-ffmpeg are such as duration ,size, frame rate etc of video file .The current gem is tested against streamio-ffmpeg 1.0.0.

##supported formats: .avi,.mp4,.mkv,.wav,.mov,.m4a

## Require the gem
```
 require 'rubygems'
 require 'videoconverter'
```
## Usage :
Parameters to Gem
actions : Hash of actions, Example 
e.g. actions : 
  {
    "resolution"    : "320x240",
    "video_bitrate" : 92,
    "thumbnail"     : 20,
    "split"         : 3,
    "cut"           : "00:00:10-00:01:10",
    "ext"           : ".avi"
  }

Source_url : The path of image.
result : The to store image after process.

Example :
options = {"actions" => "{"resolution": "320x240","video_bitrate" : 92,"thumbnail": 20,
    "split": 3,"cut": "00:00:10-00:01:10","ext":".avi"}","source_url" => "http://download.wavetlan.com/SVV/Media/HTTP/MP4/ConvertedFiles/Media-Convert/Unsupported/test7.mp4","result" => "/home/jobs/test/test7.avi"}

VideoConverter.process(options)
```
## Splitting videos in equal parts
```
"actions" => {
              "split" => 3
             }
```
The value is number of equal parts

## Thumbnail of video
```
"actions" => {
              "thumbnail" => 10
             }
```
## Resolution of video
```
"actions" => {
              "resolution": "320x240"
             }
```
# bitrate of video
```
"actions" => {
              "video_bitrate" : 92
             }
```
# cutting of video
```
"actions" => {
              "cut": "00:00:10-00:01:10"
             }
```



